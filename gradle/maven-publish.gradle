buildscript {
    repositories {
        maven { url 'http://repo.spring.io/plugins-release' }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${spring_boot_version}"
        classpath 'org.ajoberstar:gradle-git:1.4.2'
    }
}

apply plugin: 'maven-publish'
apply plugin: 'org.ajoberstar.grgit'
if (project.hasProperty('prod')) {
    apply from: "${rootProject.rootDir}/gradle/profile_prod.gradle"
} else {
    apply from: "${rootProject.rootDir}/gradle/profile_dev.gradle"
}
if (project.hasProperty('zipkin')) {
    apply from: "${rootProject.rootDir}/gradle/zipkin.gradle"
}

import org.ajoberstar.grgit.Grgit

def creds(propertyName) {
    return System.env[propertyName] ?: ext.has(propertyName) ? ext[propertyName] : 'dummy'
}

publishing {
    repositories {
        maven {
            credentials {
                username creds('ARTIFACTORY_USERNAME')
                password creds('ARTIFACTORY_PASSWORD')
            }
            url "${artifactoryRepoBase}/libs-${project.version.endsWith('-SNAPSHOT') ? 'snapshots' : 'releases'}-local"
        }
    }

    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
}

def repo = Grgit.open(dir: rootDir)
bootJar {
    manifest {
        attributes(
            (java.util.jar.Attributes.Name.IMPLEMENTATION_TITLE.toString()): project.name,
            (java.util.jar.Attributes.Name.IMPLEMENTATION_VERSION.toString()): project.version,
            (java.util.jar.Attributes.Name.IMPLEMENTATION_VENDOR.toString()): 'mimacom ag',
            'Created-By': System.getProperty('java.version') + ' (' + System.getProperty('java.vendor') + ')',
            'Build-Time': new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
            'Built-With': "gradle-${project.getGradle().getGradleVersion()}, groovy-${GroovySystem.getVersion()}",
            'Built-By': System.getProperty('user.name'),
            'Built-On': "${InetAddress.localHost.hostName}/${InetAddress.localHost.hostAddress}",
            'Spring-Version': org.springframework.core.SpringVersion.getVersion(),
            'Git-Commit': repo.head().getAbbreviatedId(8),
            'Git-Branch': repo.branch.getCurrent().getName()
        )
    }
}
